// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineMusicLibrary;

#nullable disable

namespace OnlineMusicLibrary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231103215735_ProperPlaylistTrackRelation")]
    partial class ProperPlaylistTrackRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("OnlineMusicLibrary.Playlist", b =>
                {
                    b.Property<uint>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("username");

                    b.ToTable("playlists");
                });

            modelBuilder.Entity("OnlineMusicLibrary.PlaylistTrack", b =>
                {
                    b.Property<uint>("position")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("playlistId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("trackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("position", "playlistId");

                    b.HasIndex("playlistId");

                    b.HasIndex("trackId");

                    b.ToTable("playlistTracks");
                });

            modelBuilder.Entity("OnlineMusicLibrary.Track", b =>
                {
                    b.Property<uint>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("album")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("albumArtist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("albumHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("artist")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("discCount")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("discNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("download")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("listen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lyrics")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("trackCount")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("trackNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("year")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("username");

                    b.ToTable("tracks");
                });

            modelBuilder.Entity("OnlineMusicLibrary.User", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("username");

                    b.HasIndex("token");

                    b.ToTable("users");
                });

            modelBuilder.Entity("OnlineMusicLibrary.PlaylistTrack", b =>
                {
                    b.HasOne("OnlineMusicLibrary.Playlist", "playlist")
                        .WithMany("tracks")
                        .HasForeignKey("playlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMusicLibrary.Track", "track")
                        .WithMany("playlists")
                        .HasForeignKey("trackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("playlist");

                    b.Navigation("track");
                });

            modelBuilder.Entity("OnlineMusicLibrary.Playlist", b =>
                {
                    b.Navigation("tracks");
                });

            modelBuilder.Entity("OnlineMusicLibrary.Track", b =>
                {
                    b.Navigation("playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
